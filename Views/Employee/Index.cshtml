@model IEnumerable<Employee_Model.EmployeeDetailsModel>

@{
    ViewData["Title"] = "Index";
    var successMessage = TempData["successMessage"]?.ToString();
    var errorMessage = TempData["errorMessage"]?.ToString();
}
@if (!string.IsNullOrWhiteSpace(successMessage))
{
    <div class="alert alert-success">
        <strong>Success! </strong>@successMessage
        <button type="button" class="btn-close float-end" data-bs-dismiss="alert"></button>
    </div>
}
@if (!string.IsNullOrWhiteSpace(errorMessage))
{
    <div class="alert alert-danger">
        <strong>Error! </strong>@errorMessage
        <button type="button" class="btn-close float-end" data-bs-dismiss="alert"></button>
    </div>
}
<p>
    <a class="btn btn-primary" title="Add Employee" asp-action="Create">
        <i class="fas fa-plus"></i>
    </a>
</p>
<div class="container-fluid">
    <div class="table-responsive">
        <table class="table table-striped table-bordered">
            <thead>
                <tr>
                    <th>
                        @Html.DisplayNameFor(model => model.EmployeeId)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Name)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Gender)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Mobile)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Email)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.DateOfBirth)
                    </th>
                    <th> Actions</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                    <tr>
                        <td>
                            @item.EmployeeId
                        </td>
                        <td>
                            @item.Name
                        </td>
                        <td>
                            @item.Gender
                        </td>
                        <td>
                            @item.Mobile
                        </td>
                        <td>
                            @item.Email
                        </td>
                        <td>
                            @item.DateOfBirth.ToString("dd/MM/yyyy")
                        </td>
                        <td>
                            @* <a class="btn btn-info" asp-action="Edit" asp-route-employeeId=@item.EmployeeId>Edit</a> |
                        <a class="btn btn-primary" asp-action="Details" asp-route-employeeId=@item.EmployeeId>Details</a> |
                        <button type="button" class="btn btn-danger" onclick="confirmDelete(@item.EmployeeId)">Delete</button> *@
                            <a class="btn btn-info" title="Edit" asp-action="Edit" asp-route-employeeId="@item.EmployeeId">
                                <i class="fas fa-edit"></i>
                            </a> |

                            <a class="btn btn-primary" title="Details" asp-action="Details" asp-route-employeeId="@item.EmployeeId">
                                <i class="fas fa-info-circle"></i>
                            </a> |
                            <a class="btn btn-danger" title="Delete" asp-action="Delete" asp-route-employeeId="@item.EmployeeId">
                                <i class="fas fa-trash-alt"></i>
                            </a>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>
<script>
    function confirmDelete(employeeId) {
        var result = confirm("Are you sure you want to delete this employee?");
        if (result) {
            // Construct the URL with query parameter
            var url = '@Url.Action("Delete", "Employee")' + '?employeeId=' + employeeId;

            // Construct the options for the fetch call
            var options = {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                }
                // Note: No need to include body when passing data in the URL
            };

            // Perform the fetch call
            fetch(url, options)
                .then(response => {
                    if (!response.ok) {
                        throw new Error('Network response was not ok');
                    }
                    return response.json();
                })
                .then(data => {
                    if (data.success) {
                        alert(data.message);
                        window.location.href = '@Url.Action("Index", "Employee")';
                    } else {
                        alert(data.message);
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    alert("An error occurred. Please try again.");
                });
        }
    }


</script>